--- a/Python/sysmodule.c
+++ b/Python/sysmodule.c
@@ -1196,6 +1196,11 @@
 	SET_SYS_FROM_STRING("winver",
 			    PyString_FromString(PyWin_DLLVersionString));
 #endif
+#ifdef Py_DEBUG
+	PyDict_SetItemString(sysdict, "pydebug", Py_True);
+#else
+	PyDict_SetItemString(sysdict, "pydebug", Py_False);
+#endif
 #undef SET_SYS_FROM_STRING
 	if (warnoptions == NULL) {
 		warnoptions = PyList_New(0);
--- a/Python/dynload_shlib.c
+++ b/Python/dynload_shlib.c
@@ -46,6 +46,10 @@
         {"module.exe", "rb", C_EXTENSION},
         {"MODULE.EXE", "rb", C_EXTENSION},
 #else
+#ifdef Py_DEBUG
+	{"_d.so", "rb", C_EXTENSION},
+	{"module_d.so", "rb", C_EXTENSION},
+#endif
 	{".so", "rb", C_EXTENSION},
 	{"module.so", "rb", C_EXTENSION},
 #endif
--- a/Lib/distutils/command/build.py
+++ b/Lib/distutils/command/build.py
@@ -68,15 +68,16 @@
     def finalize_options (self):
 
         plat_specifier = ".%s-%s" % (get_platform(), sys.version[0:3])
+        debug_ext = sys.pydebug and '_d' or ''
 
         # 'build_purelib' and 'build_platlib' just default to 'lib' and
         # 'lib.<plat>' under the base build directory.  We only use one of
         # them for a given distribution, though --
         if self.build_purelib is None:
-            self.build_purelib = os.path.join(self.build_base, 'lib')
+            self.build_purelib = os.path.join(self.build_base, 'lib' + debug_ext)
         if self.build_platlib is None:
             self.build_platlib = os.path.join(self.build_base,
-                                              'lib' + plat_specifier)
+                                              'lib' + debug_ext + plat_specifier)
 
         # 'build_lib' is the actual directory that we will use for this
         # particular module distribution -- if user didn't supply it, pick
@@ -91,7 +92,7 @@
         # "build/temp.<plat>"
         if self.build_temp is None:
             self.build_temp = os.path.join(self.build_base,
-                                           'temp' + plat_specifier)
+                                           'temp' + debug_ext + plat_specifier)
         if self.build_scripts is None:
             self.build_scripts = os.path.join(self.build_base,
                                               'scripts-' + sys.version[0:3])
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -65,7 +65,8 @@
                 if not os.path.exists(inc_dir):
                     inc_dir = os.path.join(os.path.dirname(base), "Include")
             return inc_dir
-        return os.path.join(prefix, "include", "python" + get_python_version())
+        return os.path.join(prefix, "include",
+                            "python" + get_python_version() + (sys.pydebug and '_d' or ''))
     elif os.name == "nt":
         return os.path.join(prefix, "include")
     elif os.name == "mac":
@@ -206,7 +207,7 @@
     if python_build:
         return os.path.join(os.path.dirname(sys.executable), "Makefile")
     lib_dir = get_python_lib(plat_specific=1, standard_lib=1)
-    return os.path.join(lib_dir, "config", "Makefile")
+    return os.path.join(lib_dir, "config" + (sys.pydebug and "_d" or ""), "Makefile")
 
 
 def parse_config_h(fp, g=None):
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -106,7 +106,7 @@
     """Append ./build/lib.<platform> in case we're running in the build dir
     (especially for Guido :-)"""
     from distutils.util import get_platform
-    s = "build/lib.%s-%.3s" % (get_platform(), sys.version)
+    s = "build/lib%s.%s-%.3s" % (sys.pydebug and '_d' or '', get_platform(), sys.version)
     s = os.path.join(os.path.dirname(sys.path[-1]), s)
     sys.path.append(s)
 
--- a/configure.in
+++ b/configure.in
@@ -731,6 +731,12 @@
 fi],
 [AC_MSG_RESULT(no)])
 
+if test "$Py_DEBUG" = 'true'
+then
+	DEBUG_EXT=_d
+fi
+AC_SUBST(DEBUG_EXT)
+
 # XXX Shouldn't the code above that fiddles with BASECFLAGS and OPT be
 # merged with this chunk of code?
 
@@ -1413,7 +1419,7 @@
 		esac
 		;;
 	CYGWIN*)   SO=.dll;;
-	*)	   SO=.so;;
+	*)	   SO=$DEBUG_EXT.so;;
 	esac
 else
 	# this might also be a termcap variable, see #610332
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -96,8 +96,8 @@
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
 LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
-INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)
-CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(VERSION)
+INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)$(DEBUG_EXT)
+CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(VERSION)$(DEBUG_EXT)
 LIBP=		$(LIBDIR)/python$(VERSION)
 
 # Symbols used for using shared libraries
@@ -110,6 +110,8 @@
 EXE=		@EXEEXT@
 BUILDEXE=	@BUILDEXEEXT@
 
+DEBUG_EXT=	@DEBUG_EXT@
+
 # Short name and location for Mac OS X Python framework
 UNIVERSALSDK=@UNIVERSALSDK@
 PYTHONFRAMEWORK=	@PYTHONFRAMEWORK@
@@ -827,8 +829,8 @@
 	$(INSTALL_DATA) pyconfig.h $(DESTDIR)$(CONFINCLUDEPY)/pyconfig.h
 
 # Install the library and miscellaneous stuff needed for extending/embedding
-# This goes into $(exec_prefix)
-LIBPL=		$(LIBP)/config
+# This goes into $(exec_prefix)$(DEBUG_EXT)
+LIBPL=		$(LIBP)/config$(DEBUG_EXT)
 libainstall:	all
 	@for i in $(LIBDIR) $(LIBP) $(LIBPL); \
 	do \
