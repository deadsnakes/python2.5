From: Felix Krull <f_krull@gmx.de>
Date: Fri, 27 Apr 2018 08:24:06 -0700
Subject: issue1813

# DP: Fix issues with turkish locale.
---
 Lib/decimal.py        | 8 +++++++-
 Lib/email/__init__.py | 7 +++++--
 Python/codecs.c       | 7 ++++++-
 3 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/Lib/decimal.py b/Lib/decimal.py
index b5a9435..f921e07 100644
--- a/Lib/decimal.py
+++ b/Lib/decimal.py
@@ -146,6 +146,12 @@ ROUND_UP = 'ROUND_UP'
 ROUND_HALF_DOWN = 'ROUND_HALF_DOWN'
 ROUND_05UP = 'ROUND_05UP'
 
+import string
+
+def ascii_upper(s):
+    trans_table = string.maketrans(string.ascii_lowercase, string.ascii_uppercase)
+    return s.translate(trans_table)
+
 # Errors
 
 class DecimalException(ArithmeticError):
@@ -3354,7 +3360,7 @@ rounding_functions = [name for name in Decimal.__dict__.keys()
                                     if name.startswith('_round_')]
 for name in rounding_functions:
     # name is like _round_half_even, goes to the global ROUND_HALF_EVEN value.
-    globalname = name[1:].upper()
+    globalname = ascii_upper(name[1:])
     val = globals()[globalname]
     Decimal._pick_rounding_function[val] = name
 
diff --git a/Lib/email/__init__.py b/Lib/email/__init__.py
index a793436..27c1abb 100644
--- a/Lib/email/__init__.py
+++ b/Lib/email/__init__.py
@@ -109,15 +109,18 @@ _MIMENAMES = [
     'Text',
     ]
 
+import string
+lower_map = string.maketrans(string.ascii_uppercase, string.ascii_lowercase)
+
 for _name in _LOWERNAMES:
-    importer = LazyImporter(_name.lower())
+    importer = LazyImporter(_name.translate(lower_map))
     sys.modules['email.' + _name] = importer
     setattr(sys.modules['email'], _name, importer)
 
 
 import email.mime
 for _name in _MIMENAMES:
-    importer = LazyImporter('mime.' + _name.lower())
+    importer = LazyImporter('mime.' + _name.translate(lower_map))
     sys.modules['email.MIME' + _name] = importer
     setattr(sys.modules['email'], 'MIME' + _name, importer)
     setattr(sys.modules['email.mime'], _name, importer)
diff --git a/Python/codecs.c b/Python/codecs.c
index 4b0f4cb..8455541 100644
--- a/Python/codecs.c
+++ b/Python/codecs.c
@@ -45,6 +45,11 @@ int PyCodec_Register(PyObject *search_function)
     return -1;
 }
 
+/* isupper() forced into the ASCII Locale */
+#define ascii_isupper(x) (((x) >= 0x41) && ((x) <= 0x5A))
+/* tolower() forced into the ASCII Locale */
+#define ascii_tolower(x) (ascii_isupper(x) ? ((x) + 0x20) : (x))
+
 /* Convert a string to a normalized Python string: all characters are
    converted to lower case, spaces are replaced with underscores. */
 
@@ -70,7 +75,7 @@ PyObject *normalizestring(const char *string)
         if (ch == ' ')
             ch = '-';
         else
-            ch = tolower(Py_CHARMASK(ch));
+            ch = ascii_tolower(Py_CHARMASK(ch));
 	p[i] = ch;
     }
     return v;
