# DP: Support mixed-endian IEEE floating point, as found in the ARM old-ABI.
--- a/Objects/floatobject.c
+++ b/Objects/floatobject.c
@@ -982,7 +982,11 @@
 /* this is for the benefit of the pack/unpack routines below */
 
 typedef enum {
+#ifdef __arm__
+	unknown_format, ieee_big_endian_format, ieee_little_endian_format, ieee_mixed_endian_format
+#else
 	unknown_format, ieee_big_endian_format, ieee_little_endian_format
+#endif
 } float_format_type;
 
 static float_format_type double_format, float_format;
@@ -1021,6 +1025,10 @@
 		return PyString_FromString("IEEE, little-endian");
 	case ieee_big_endian_format:
 		return PyString_FromString("IEEE, big-endian");
+#ifdef __arm__
+	case ieee_mixed_endian_format:
+		return PyString_FromString("IEEE, mixed-endian");
+#endif
 	default:
 		Py_FatalError("insane float_format or double_format");
 		return NULL;
@@ -1073,11 +1081,21 @@
 	else if (strcmp(format, "IEEE, big-endian") == 0) {
 		f = ieee_big_endian_format;
 	}
+#ifdef __arm__
+	else if (strcmp(format, "IEEE, mixed-endian") == 0) {
+		f = ieee_mixed_endian_format;
+	}
+#endif
 	else {
 		PyErr_SetString(PyExc_ValueError,
 				"__setformat__() argument 2 must be "
+#ifdef __arm__
+				"'unknown', 'IEEE, little-endian', "
+				"'IEEE, big-endian' or 'IEEE, mixed-endian'");
+#else
 				"'unknown', 'IEEE, little-endian' or "
 				"'IEEE, big-endian'");
+#endif
 		return NULL;
 
 	}
@@ -1230,6 +1248,10 @@
 			detected_double_format = ieee_big_endian_format;
 		else if (memcmp(&x, "\x05\x04\x03\x02\x01\xff\x3f\x43", 8) == 0)
 			detected_double_format = ieee_little_endian_format;
+#ifdef __arm__
+		else if (memcmp(&x, "\x01\xff\x3f\x43\x05\x04\x03\x02", 8) == 0)
+			detected_double_format = ieee_mixed_endian_format;
+#endif
 		else 
 			detected_double_format = unknown_format;
 	}
@@ -1565,8 +1587,23 @@
 			p += 7;
 			incr = -1;
 		}
+#ifdef __arm__
+		else if (double_format == ieee_mixed_endian_format) {
+			if (le)
+				p += 4;
+			else {
+				p += 3;
+				incr = -1;
+			}
+		}
+#endif
 		
 		for (i = 0; i < 8; i++) {
+#ifdef __arm__
+			if (double_format == ieee_mixed_endian_format && i == 4)
+				p += -8 * incr;
+#endif
+
 			*p = *s++;
 			p += incr;
 		}
@@ -1739,6 +1776,29 @@
 			}
 			memcpy(&x, buf, 8);
 		}
+#ifdef __arm__
+		else if (double_format == ieee_mixed_endian_format) {
+			char buf[8];
+			char *d;
+			int i, incr = 1;
+
+			if (le)
+				d = &buf[4];
+			else
+				d = &buf[3];
+
+			for (i = 0; i < 4; i++) {
+				*d = *p++;
+				d += incr;
+			}
+			d += -8 * incr;
+			for (i = 0; i < 4; i++) {
+				*d = *p++;
+				d += incr;
+			}
+			memcpy(&x, buf, 8);
+		}
+#endif
 		else {
 			memcpy(&x, p, 8);
 		}
